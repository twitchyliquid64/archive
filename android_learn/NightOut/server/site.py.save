from tornado import Server
import TemplateAPI
import sqlite3 as lite

con = lite.connect('main.db')


def createTables():
	cur = con.cursor()
	cur.execute("CREATE TABLE IF NOT EXISTS Users(id INTEGER PRIMARY KEY, Username varchar(255) NOT NULL UNIQUE, Name varchar(255), Password varchar(255), Email varchar(255), ProfilePic BLOB)")
	cur.execute("CREATE TABLE IF NOT EXISTS Sessions(id INTEGER PRIMARY KEY, Key varchar(32), UserID INTEGER)")
	con.commit()
	cur.close()

def dummy():
    print "Started"

def createSessionHandler(response):
	username = response.get_field("username")
	passwd = response.get_field("password")
	cur = con.cursor()
	cur.execute("SELECT username FROM Users WHERE username = ? AND passw", (username,passwd,))
	res = cur.fetchall()
	cur.close()


def checkUserExistsHandler(response):
	username = response.get_field("username")
	print "Checking:", username
	cur = con.cursor()
	cur.execute("SELECT username FROM Users WHERE username = ?", (username,))
	res = cur.fetchall()
	cur.close()
	response.write("OK" if len(res) == 0 else "EXISTS")

def registerUserHandler(response):
	cur = con.cursor()
	cur.execute("INSERT INTO Users (username,password,name,email) VALUES (?,?,?,?)", (
			response.get_field("username"),
			response.get_field("password"),
			response.get_field("name"),
			response.get_field("email"),))
	con.commit()
	cur.close()
	response.write("OK")

def indexPage(response):
    response.write(TemplateAPI.render('website.html', response, {}))


createTables()
server = Server('0.0.0.0', 80)
server.register("/", indexPage)
server.register("/userexists", checkUserExistsHandler)
server.register("/register", registerUserHandler)
server.run(dummy)
